// <auto-generated />
using System;
using CashFlowApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CashFlowApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231212140654_MigracaoLancamentoCategoria")]
    partial class MigracaoLancamentoCategoria
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CashFlowApi.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TB_CATEGORIAS");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Salario"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Aluguel"
                        });
                });

            modelBuilder.Entity("CashFlowApi.Models.Lancamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoLancamento")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TB_LANCAMENTOS");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataLancamento = new DateTime(2023, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Salario de Novembro",
                            TipoLancamento = 2,
                            Valor = 5000.00m
                        },
                        new
                        {
                            Id = 2,
                            DataLancamento = new DateTime(2023, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Aluguel de Novembro",
                            TipoLancamento = 1,
                            Valor = 1200.00m
                        });
                });

            modelBuilder.Entity("CashFlowApi.Models.LancamentoCategoria", b =>
                {
                    b.Property<int>("LancamentoId")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.HasKey("LancamentoId", "CategoriaId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("TB_LANCAMENTOCATEGORIAS");

                    b.HasData(
                        new
                        {
                            LancamentoId = 1,
                            CategoriaId = 1
                        },
                        new
                        {
                            LancamentoId = 2,
                            CategoriaId = 2
                        });
                });

            modelBuilder.Entity("CashFlowApi.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAcesso")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TB_USUARIOS");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 162, 192, 18, 61, 86, 182, 239, 36, 208, 76, 102, 114, 199, 184, 67, 146, 112, 48, 43, 121, 51, 46, 40, 55, 36, 43, 251, 183, 11, 18, 2, 29, 42, 245, 152, 222, 187, 45, 200, 130, 122, 79, 192, 181, 103, 41, 248, 165, 241, 209, 44, 151, 12, 88, 36, 22, 49, 195, 53, 200, 109, 78, 131, 109 },
                            PasswordSalt = new byte[] { 200, 219, 106, 62, 34, 55, 251, 188, 29, 175, 196, 127, 134, 242, 141, 123, 94, 179, 237, 17, 64, 2, 214, 1, 7, 166, 226, 244, 187, 246, 243, 137, 174, 19, 151, 44, 1, 137, 68, 164, 138, 238, 241, 116, 98, 20, 77, 136, 97, 191, 218, 93, 105, 61, 32, 200, 173, 146, 204, 251, 215, 28, 156, 212, 17, 118, 170, 223, 162, 221, 255, 58, 38, 234, 3, 194, 210, 168, 80, 89, 72, 148, 150, 189, 118, 104, 27, 178, 65, 235, 115, 159, 173, 231, 7, 102, 238, 189, 25, 135, 167, 92, 8, 46, 140, 187, 57, 172, 31, 151, 211, 90, 179, 8, 113, 35, 92, 227, 230, 224, 68, 182, 247, 99, 126, 159, 92, 122 },
                            Username = "Admin"
                        });
                });

            modelBuilder.Entity("CashFlowApi.Models.Lancamento", b =>
                {
                    b.HasOne("CashFlowApi.Models.Usuario", "Usuario")
                        .WithMany("Lancamentos")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CashFlowApi.Models.LancamentoCategoria", b =>
                {
                    b.HasOne("CashFlowApi.Models.Categoria", "Categoria")
                        .WithMany("LancamentoCategorias")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CashFlowApi.Models.Lancamento", "Lancamento")
                        .WithMany("LancamentoCategorias")
                        .HasForeignKey("LancamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Lancamento");
                });

            modelBuilder.Entity("CashFlowApi.Models.Categoria", b =>
                {
                    b.Navigation("LancamentoCategorias");
                });

            modelBuilder.Entity("CashFlowApi.Models.Lancamento", b =>
                {
                    b.Navigation("LancamentoCategorias");
                });

            modelBuilder.Entity("CashFlowApi.Models.Usuario", b =>
                {
                    b.Navigation("Lancamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
